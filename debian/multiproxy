#!/bin/sh
### BEGIN INIT INFO
# Provides:             multiproxy
# Required-Start:       $syslog $remote_fs
# Required-Stop:        $syslog $remote_fs
# Should-Start:         $local_fs
# Should-Stop:          $local_fs
# Default-Start:        2 3 4 5
# Default-Stop:         0 1 6
# Short-Description:    multiproxy - Proxy for duplicating requests to multiple backends
# Description:          multiproxy - Proxy for duplicating requests to multiple backends
### END INIT INFO

DAEMON=/usr/local/bin/multiproxy
RUNDIR=/run/multiproxy
PIDFILE=$RUNDIR/multiproxy.pid
CONFIGFILE=/etc/multiproxy/config.cfg
ARGS="-d -c=$CONFIGFILE -pid=$PIDFILE"
NAME="multiproxy"

test -x $DAEMON || exit 0

running_pid() {
    # Check if a given process pid's cmdline matches a given name
    pid=$1
    name=$2
    [ -z "$pid" ] && return 1
    [ ! -d /proc/$pid ] &&  return 1
    cmd=`cat /proc/$pid/cmdline | tr "\000" "\n"|head -n 1 |cut -d : -f 1`
    # Is this the expected server
    [ "$cmd" != "$name" ] &&  return 1
    return 0
}

running() {
    # Check if the process is running looking at /proc
    # (works for all users)

    [ ! -f "$PIDFILE" ] && return 1
    pid=`cat $PIDFILE`
    running_pid $pid $DAEMON || return 1
    return 0
}

case "$1" in
    start)
        if start-stop-daemon --start --quiet --chuid multiproxy:multiproxy --make-pidfile --pidfile $PIDFILE --background --exec $DAEMON -- $ARGS
        then
            echo "$NAME started."
        else
            echo "$NAME starting failed."
        fi
        ;;
    stop)
        if start-stop-daemon --stop --retry forever/TERM/1 --quiet --make-pidfile --oknodo --pidfile $PIDFILE --exec $DAEMON
        then
            echo "$NAME stopped."
        else
            echo "$NAME stop failed"
        fi
        rm -f $PIDFILE
        sleep 1
        ;;
    restart)
        ${0} stop
        ${0} start
        ;;
    status)
        log_daemon_msg "Checking status of $DESC" "$NAME"
        if running ;  then
            log_progress_msg "running"
            log_end_msg 0
        else
            log_progress_msg "not running"
            log_end_msg 1
            exit 1
        fi
        ;;
    *)
        echo "Usage: /etc/init.d/$NAME {start|stop|restart}" >&2
        exit 1
        ;;
esac

exit 0
